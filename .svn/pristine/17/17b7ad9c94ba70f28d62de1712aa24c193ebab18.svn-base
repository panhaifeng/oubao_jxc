{
    "//":"注意：如果要加注释，请使用这种奇怪的写法"
    ,"//":"url一般在调用方进行申明，这里的url是为了测试程序和查阅时使用"
    ,"url":"http://localhost/jxc_oubao/api.php"
    ,"//":"密匙，调用方在调用时，必须传入这个token，匹配上之后才允许调用"
    ,"token":"6a1b8e9cae6d0a3a8c3628de74f53ecec4b5735dcb805c57e3e2c3e15fdee643"
    ,"//":"暂停使用"
    ,"type":"json"
    ,"version":"1.0"
    ,"data":{
        "//":"以下表示一个大类"
        ,"订单相关":{
            "order.create":{
                "//":"相关的类和方法，必须指定"
                ,"funcName":"Api_Lib_Order@create"
                ,"name":"创建订单"
                ,"desc":"根据传入的参数创建一个订单"
                ,"//":"参数的指定，制定了参数后，使得接口的测试更加的方便，在写接口测试程序时需要使用,所以一般还是要写params"
                ,"params":{
                    "//":"这是参数的简单设置,相当于只指定了name属性"
                    ,"orderCode":"订单号"
                    ,"Order":"所有订单信息，订单主表信息"
                    ,"Pro":"所有订单信息，订单子表信息"
                }
            }
            ,"order.message.create":{
                "funcName":"Api_Lib_Order@messageCreate"
                ,"name":"订单留言"
                ,"desc":"订单留言"
                ,"params":{
                    "orderCode":"订单号"
                    ,"message":"留言信息"
                }
            }
            ,"order.getOrderById":{
                "funcName":"Api_Lib_Order@getOrderById"
                ,"name":"根据orderId得到订单信息"
                ,"desc":"根据orderId得到订单信息"
                ,"params":{
                    "orderId":"orderId"
                    ,"aa":{
                        "name":"参数2"
                        ,"desc":"参数的详细描述"
                        ,"default":""
                        ,"type":"varchar"
                        ,"required":false
                    }
                }
            }
            ,"order.isdelivery":{
                "funcName":"Api_Lib_Order@isdelivery"
                ,"name":"根据orderId得到订单信息"
                ,"desc":"根据orderId得到订单信息"
                ,"params":{
                    "orderCode":"orderCode",
                    "isdelivery_desc":"取消发货其他描述：原因与创建人"
                }
            }
            ,"order.settag":{
                "funcName":"Api_Lib_Order@settag"
                ,"name":"根据orderId更新订单标签"
                ,"desc":"根据orderId更新订单标签"
                ,"params":{
                    "orderCode":"orderCode",
                    "tag_name":"标签"
                }
            }
            ,"order.statuschange":{
                "funcName":"Api_Lib_Order@statuschange"
                ,"name":"根据orderId得到订单信息"
                ,"desc":"根据orderId得到订单信息"
                ,"params":{
                    "orderCode":"orderCode",
                    "status":"状态"
                }
            }
        }
        ,"仓库相关":{
            "Cangku.getMadan":{
                "funcName":"Api_Lib_Cangku@getMadan"
                ,"name":"得到码单信息(已取消)"
                ,"desc":"测试接口"
                ,"params":{
                    "product_id":"product_id"
                }
            }
            ,"Cangku.getMadanDetail":{
                "funcName":"Api_Lib_Cangku@getMadanDetail"
                ,"name":"得到码单明细"
                ,"desc":"根据madanId得到码单的明细"
                ,"params":{
                    "madan_ids":"madan_ids"
                }
            }
            ,"Cangku.getKucun":{
                "funcName":"Api_Lib_Cangku@getKucun"
                ,"name":"得到进销存中库存信息"
                ,"desc":"现货仓库，样品仓库的库存api接口"
                ,"params":{
                    "product_id":"product_id货号"
                    ,"kuweiName":"现货/样品"
                }
            }
            ,"Cangku.getproductsKucun":{
                "funcName":"Api_Lib_Cangku@getproductsKucun"
                ,"name":"得到进销存中库存信息"
                ,"desc":"现货仓库，样品仓库的库存api接口"
                ,"params":{
                    "product_id":"product_id货号"
                }
            }
            ,"Cangku.zaitu":{
                "funcName":"Api_Lib_Cangku@getZaitu"
                ,"name":"得到进销存中库存信息"
                ,"desc":"现货仓库，样品仓库的库存api接口"
                ,"params":{
                    "product_id":"product_id货号"
                    ,"kuweiName":"现货/样品"
                }
            }
            ,"Cangku.productsZaitu":{
                "funcName":"Api_Lib_Cangku@getproductsZaitu"
                ,"name":"得到进销存中库存信息"
                ,"desc":"现货仓库的库存api接口"
                ,"params":{
                    "product_id":"所有product_id货号"
                    ,"kuweiName":"现货"
                }
            }
            ,"Cangku.backtask":{
                "funcName":"Api_Lib_Cangku@backtask"
                ,"name":"仓库退换货任务"
                ,"desc":"仓库退换货任务"
                ,"params":{
                    "data":"数据集"
                }
            }
        }
        ,"配货单相关":{
            "peihuo.getData.active":{
                "funcName":"Api_Lib_Peihuo@getDataActive"
                ,"name":"获取所有可以配货的码单信息"
                ,"desc":"获取所有可以配货的码单信息，不包括被锁定的码单"
                ,"params":{
                    "//":"批次号"
                    ,"productId":"productId"
                }
            }
            ,"peihuo.autoPeihuo":{
                "funcName":"Api_Lib_Peihuo@autoPeihuo"
                ,"name":"自动配货"
                ,"desc":"自动配货"
                ,"params":{
                    "//":"批次号"
                    ,"productId":"productId"
                    ,"cntM":"cntM"
                }
            }
            ,"peihuo.getPeihuo":{
                "funcName":"Api_Lib_Peihuo@getPeihuo"
                ,"name":"获取客户对应的配货单"
                ,"desc":"获取客户对应的配货单"
                ,"params":{
                    "clientId":"clientId"
                    ,"productId":"productId"
                }
            }
            ,"peihuo.lock":{
                "funcName":"Api_Lib_Peihuo@lock"
                ,"name":"ec端配货后，被选中的码单需要锁定状态"
                ,"desc":"ec端配货后，被选中的码单需要锁定状态"
                ,"params":{
                    "madanIds":"madanIds:1,2,3,4形式"
                    ,"status":"状态：锁定/取消锁定"
                }
            }
            ,"peihuo.status":{
                "funcName":"Api_Lib_Peihuo@status"
                ,"name":"获取一组码单ids的状态，是锁定还是啥"
                ,"desc":"获取一组码单ids的状态，是锁定还是啥"
                ,"params":{
                    "madanIds":"madanIds:1,2,3,4形式"
                }
            }
            ,"peihuo.getDataState":{
                "funcName":"Api_Lib_Peihuo@getDataState"
                ,"name":"检测配货单状态 是否可以下单支付"
                ,"desc":"检测配货单状态 是否可以下单支付"
                ,"params":{
                    "madanIds":"madanIds:1,2,3,4形式"
                }
            }
            ,"peihuo.checkMadan":{
                "funcName":"Api_Lib_Peihuo@checkMadan"
                ,"name":"检测码单状态 是否可以结算"
                ,"desc":"检测码单状态 是否可以结算"
                ,"params":{
                    "madanIds":"madanIds:1,2,3,4形式"
                }
            }
        }
        ,"基础档案相关":{
            "jichu.deleteClient":{
                "funcName":"Api_Lib_Jichu@deleteClient"
                ,"name":"ec端删除会员jxc同步删除"
                ,"desc":"ec端删除会员jxc同步删除"
                ,"params":{
                    "member_id":"会员id"
                }
            }
            ,"jichu.deleteProduct":{
                "funcName":"Api_Lib_Jichu@deleteProduct"
                ,"name":"ec端删除货品jxc同步删除"
                ,"desc":"ec端删除货品jxc同步删除"
                ,"params":{
                    "data":"货品编码，传过来是数组"
                }
            }
            ,"jichu.getBankName":{
                "funcName":"Api_Lib_Jichu@getBankName"
                ,"name":"ec端同步银行账号"
                ,"desc":"ec端同步银行账号"
                ,"params":{
                    "data":"传过来的是空"
                }
            }
            ,"jichu.getCompName":{
                "funcName":"Api_Lib_Jichu@getCompName"
                ,"name":"ec端查找是否有相同的公司名称"
                ,"desc":"ec端查找是否有相同的公司名称"
                ,"params":{
                    "data":"公司名称"
                }
            }
        }
        ,"财务相关":{
            "Caiwu.createYsGuozhang":{
                "funcName":"Api_Lib_Caiwu@createYsGuozhang"
                ,"name":"ec存入预存款jxc同步收款"
                ,"desc":"ec存入预存款jxc同步收款"
                ,"params":{
                    "money":"金额",
                    "type":"类型",
                    "member_id":"客户",
                    "orderCode":"订单号",
                    "payment_id":"支付单号"
                }
            }
            ,"Caiwu.moneyback":{
                "funcName":"Api_Lib_Caiwu@moneyback"
                ,"name":"ec存入预存款jxc同步收款"
                ,"desc":"ec存入预存款jxc同步收款"
                ,"params":{
                    "money":"金额",
                    "type":"类型",
                    "orderCode":"订单号"
                }
            }
            ,"Caiwu.kaipiaolimit":{
                "funcName":"Api_Lib_Caiwu@kaipiaolimit"
                ,"name":"ec同步jxc开票"
                ,"desc":"ec同步jxc开票"
                ,"params":{
                    "kaipiao":"总开票额度",
                    "kaipiaoover":"已开票",
                    "kaipiaolimit":"剩余开票额度"
                }
            }
        }
        ,"测试相关":{
            "respon.test":{
                "funcName":"Api_Lib_Test@responseTest"
                ,"name":"响应测试"
                ,"desc":"响应测试"
                ,"params":{
                    "param1":"参数1"
                    ,"objParam":"复杂数组参数"
                }
            }
        }
    }
}